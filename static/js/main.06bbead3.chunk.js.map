{"version":3,"sources":["Button.jsx","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Button","isNumeric","isOperator","value","otherProps","className","Calculator","this","state","lastvalue","left","right","op","op_symbol","MAXDIG","err","ans","number","toLastValue","toLeft","newleft","toString","length","newright","dig","split","forEach","x","lastVal","Number","parseFloat","Math","round","y","floor","slice","App","props","onPressKey","key","calculator","exec","parseInt","plus","minus","mult","divi","equal","AC","C","sign","dot","del","setState","screen","getScreen","onClick","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06bbead3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ isNumeric, isOperator, value, ...otherProps}) => {\r\n  if (isOperator)\r\n    return <div className='key operator-key' {...otherProps}><span>{value}</span></div>\r\n  if (isNumeric)\r\n    return <div className='key numeric-key' {...otherProps}><span>{value}</span></div>\r\n  return <div/>\r\n}\r\n\r\nexport default Button;","class Calculator\r\n{\r\n  constructor() {\r\n    this.state = {\r\n      lastvalue: '',\r\n      left: '',\r\n      right: '',\r\n      op: null,\r\n      op_symbol: '',\r\n      MAXDIG: 8,\r\n      err: false,\r\n    }\r\n  }\r\n\r\n  getScreen() {\r\n    const { right, op, op_symbol, left, lastvalue, err} = this.state;\r\n    let ans = '';\r\n    if(err)\r\n      ans += 'ERR';\r\n    else {\r\n      if(lastvalue) ans += lastvalue;\r\n      if(left) ans += left;\r\n      if(op != null) ans += op_symbol;\r\n      if(right) ans += right;\r\n    }\r\n    return ans;\r\n  }\r\n\r\n  dig(number) {\r\n    const { op, right, left, lastvalue } = this.state;\r\n    if (this.toLastValue()) {\r\n      if (op)\r\n        this.state.left = lastvalue;\r\n      this.state.lastvalue = null;\r\n    }\r\n\r\n    if(this.toLeft()){\r\n      const newleft = left + number.toString();\r\n      if(newleft.length <= this.state.MAXDIG)\r\n        this.state.left = newleft;\r\n    }\r\n    else {\r\n      let newright = right + number.toString();\r\n      if(newright.length <= this.state.MAXDIG)\r\n        this.state.right = newright;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  dot() {\r\n    return this.dig('.');\r\n  }\r\n\r\n  num(number) {\r\n    number.toString().split().forEach(x => this.dig(x));\r\n    return this;\r\n  }\r\n\r\n  equal() {\r\n    const { left, right, op } = this.state;\r\n    if(op)\r\n    {\r\n      let lastVal = op(Number.parseFloat(left), Number.parseFloat(right));\r\n      lastVal = Math.round(lastVal*1000)/1000;\r\n      this.state.lastvalue = lastVal.toString();\r\n      if(this.state.lastvalue.length > this.state.MAXDIG)\r\n        this.state.err = true;\r\n    }\r\n    this.state.left = '';\r\n    this.state.op = null;\r\n    this.state.op_symbol = '';\r\n    this.state.right = '';\r\n    return this;\r\n  }\r\n\r\n  plus() {this.state.op = (x, y) => x+y; this.state.op_symbol = '+'; return this;}\r\n\r\n  minus() {this.state.op = (x, y) => x-y; this.state.op_symbol = '-'; return this;}\r\n  mult() {this.state.op = (x, y) => x*y; this.state.op_symbol = '*'; return this;}\r\n  divi() {this.state.op = (x, y) => Math.floor(x/y); this.state.op_symbol = '/'; return this;}\r\n  AC() {\r\n    this.state.lastvalue = null;\r\n    this.state.left = '';\r\n    this.state.right = '';\r\n    this.state.op = null;\r\n    this.state.op_symbol = '';\r\n    this.state.err = false;\r\n    return this;\r\n  }\r\n\r\n  C() {\r\n    if (this.toLastValue())\r\n      this.state.lastvalue = '';\r\n    if(this.toLeft())\r\n      this.state.left = '';\r\n    else\r\n      this.state.right = '';\r\n    return this;\r\n  }\r\n\r\n  sign() {\r\n    const { left, right, lastvalue } = this.state;\r\n    if (this.toLastValue())\r\n      this.state.lastvalue = -lastvalue;\r\n    else if(this.toLeft())\r\n      this.state.left = -left;\r\n    else\r\n      this.state.right = -right;\r\n    return this;\r\n  }\r\n\r\n  del() {\r\n    const { left, right, lastvalue } = this.state;\r\n    if (this.toLastValue())\r\n      this.state.lastvalue = lastvalue.slice(0, -1);\r\n    else if(this.toLeft())\r\n      this.state.left = left.slice(0, -1);\r\n    else\r\n      this.state.right = right.slice(0, -1);\r\n    return this;\r\n  }\r\n\r\n  toLeft() {\r\n    return this.state.op === null;\r\n  }\r\n\r\n  toLastValue() {\r\n    return this.state.lastvalue;\r\n  }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\n\nimport Button from \"./Button\";\nimport Calculator from \"./Calculator\";\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calculator: new Calculator(),\n      screen: 0\n    };\n  }\n\n  onPressKey = (key) => () => {\n    const { calculator } = this.state;\n    const isDigit = (x) => /\\d/.exec(x);\n\n    if(isDigit(key)) calculator.dig(parseInt(key));\n    if(key === '+') calculator.plus();\n    if(key === '-') calculator.minus();\n    if(key === 'x') calculator.mult();\n    if(key === '/') calculator.divi();\n    if(key === '=') calculator.equal();\n    if(key === 'AC') calculator.AC();\n    if(key === 'C') calculator.C();\n    if(key === '+/-') calculator.sign();\n    if(key === '.') calculator.dot();\n    if(key === '⌫') calculator.del();\n    this.setState({screen: calculator.getScreen()});\n  };\n\n  render() {\n    const { screen } = this.state;\n    return (\n      <div className='App'>\n        <div className='calculator'>\n          <div className='screen'>\n            <div className='screen'>\n              <div className='screen-text'>{screen}</div>\n            </div>\n          </div>\n          <div className='keys'>\n            <div className='operations'>\n              <Button isNumeric value='AC' onClick={this.onPressKey('AC')}/>\n              <Button isNumeric value='C' onClick={this.onPressKey('C')} />\n              <Button isNumeric value='⌫' onClick={this.onPressKey('⌫')} />\n            </div>\n            <div className='numeric'>\n              <Button isNumeric value='7' onClick={this.onPressKey('7')}/>\n              <Button isNumeric value='8' onClick={this.onPressKey('8')}/>\n              <Button isNumeric value='9' onClick={this.onPressKey('9')}/>\n              <Button isNumeric value='4' onClick={this.onPressKey('4')}/>\n              <Button isNumeric value='5' onClick={this.onPressKey('5')}/>\n              <Button isNumeric value='6' onClick={this.onPressKey('6')}/>\n              <Button isNumeric value='1' onClick={this.onPressKey('1')}/>\n              <Button isNumeric value='2' onClick={this.onPressKey('2')}/>\n              <Button isNumeric value='3' onClick={this.onPressKey('3')}/>\n              <Button isNumeric value='+/-' onClick={this.onPressKey('+/-')}/>\n              <Button isNumeric value='0' onClick={this.onPressKey('0')}/>\n              <Button isNumeric value='.' onClick={this.onPressKey('.')}/>\n            </div>\n            <div className='operators'>\n              <Button isOperator value='/' onClick={this.onPressKey('/')}/>\n              <Button isOperator value='x' onClick={this.onPressKey('x')}/>\n              <Button isOperator value='-' onClick={this.onPressKey('-')}/>\n              <Button isOperator value='+' onClick={this.onPressKey('+')}/>\n              <Button isOperator value='=' onClick={this.onPressKey('=')}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}